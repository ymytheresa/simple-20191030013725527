/*
 * BOCHK FinTech Hackathon 2018 API (Frontend)
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.14 (20180124)
 * Contact: it_innovation_lab@bochk.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bochk.hackathon.api.oauth.model;

import java.util.Objects;
import com.bochk.hackathon.api.oauth.model.Currency;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PersonalLoanCheckRateRequest
 */
public class PersonalLoanCheckRateRequest {
  @SerializedName("currency")
  private Currency currency = null;

  @SerializedName("amount")
  private Long amount = null;

  @SerializedName("no_of_terms")
  private Long noOfTerms = null;

  @SerializedName("remark")
  private String remark = null;

  public PersonalLoanCheckRateRequest currency(Currency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(required = true, value = "")
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  public PersonalLoanCheckRateRequest amount(Long amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Amount to loan (in dollar)
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "Amount to loan (in dollar)")
  public Long getAmount() {
    return amount;
  }

  public void setAmount(Long amount) {
    this.amount = amount;
  }

  public PersonalLoanCheckRateRequest noOfTerms(Long noOfTerms) {
    this.noOfTerms = noOfTerms;
    return this;
  }

   /**
   * Number of installments (monthly)
   * @return noOfTerms
  **/
  @ApiModelProperty(required = true, value = "Number of installments (monthly)")
  public Long getNoOfTerms() {
    return noOfTerms;
  }

  public void setNoOfTerms(Long noOfTerms) {
    this.noOfTerms = noOfTerms;
  }

  public PersonalLoanCheckRateRequest remark(String remark) {
    this.remark = remark;
    return this;
  }

   /**
   * Free text remark
   * @return remark
  **/
  @ApiModelProperty(value = "Free text remark")
  public String getRemark() {
    return remark;
  }

  public void setRemark(String remark) {
    this.remark = remark;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonalLoanCheckRateRequest personalLoanCheckRateRequest = (PersonalLoanCheckRateRequest) o;
    return Objects.equals(this.currency, personalLoanCheckRateRequest.currency) &&
        Objects.equals(this.amount, personalLoanCheckRateRequest.amount) &&
        Objects.equals(this.noOfTerms, personalLoanCheckRateRequest.noOfTerms) &&
        Objects.equals(this.remark, personalLoanCheckRateRequest.remark);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, amount, noOfTerms, remark);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonalLoanCheckRateRequest {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    noOfTerms: ").append(toIndentedString(noOfTerms)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

