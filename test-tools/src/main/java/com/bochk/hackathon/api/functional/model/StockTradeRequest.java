/*
 * BOCHK FinTech Hackathon 2018 API (Backend)
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.14 (20180124)
 * Contact: it_innovation_lab@bochk.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bochk.hackathon.api.functional.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * StockTradeRequest
 */
public class StockTradeRequest {
  /**
   * Type of trade
   */
  @JsonAdapter(ActionEnum.Adapter.class)
  public enum ActionEnum {
    BUY("BUY"),
    
    SELL("SELL");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ActionEnum fromValue(String text) {
      for (ActionEnum b : ActionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ActionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("action")
  private ActionEnum action = null;

  @SerializedName("stock_code")
  private String stockCode = null;

  @SerializedName("unit_price")
  private Double unitPrice = null;

  @SerializedName("quantity")
  private Long quantity = null;

  @SerializedName("settlement_account_no")
  private String settlementAccountNo = null;

  @SerializedName("remark")
  private String remark = null;

  public StockTradeRequest action(ActionEnum action) {
    this.action = action;
    return this;
  }

   /**
   * Type of trade
   * @return action
  **/
  @ApiModelProperty(required = true, value = "Type of trade")
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }

  public StockTradeRequest stockCode(String stockCode) {
    this.stockCode = stockCode;
    return this;
  }

   /**
   * Get stockCode
   * @return stockCode
  **/
  @ApiModelProperty(required = true, value = "")
  public String getStockCode() {
    return stockCode;
  }

  public void setStockCode(String stockCode) {
    this.stockCode = stockCode;
  }

  public StockTradeRequest unitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @ApiModelProperty(required = true, value = "")
  public Double getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
  }

  public StockTradeRequest quantity(Long quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getQuantity() {
    return quantity;
  }

  public void setQuantity(Long quantity) {
    this.quantity = quantity;
  }

  public StockTradeRequest settlementAccountNo(String settlementAccountNo) {
    this.settlementAccountNo = settlementAccountNo;
    return this;
  }

   /**
   * Get settlementAccountNo
   * @return settlementAccountNo
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSettlementAccountNo() {
    return settlementAccountNo;
  }

  public void setSettlementAccountNo(String settlementAccountNo) {
    this.settlementAccountNo = settlementAccountNo;
  }

  public StockTradeRequest remark(String remark) {
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @ApiModelProperty(value = "")
  public String getRemark() {
    return remark;
  }

  public void setRemark(String remark) {
    this.remark = remark;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StockTradeRequest stockTradeRequest = (StockTradeRequest) o;
    return Objects.equals(this.action, stockTradeRequest.action) &&
        Objects.equals(this.stockCode, stockTradeRequest.stockCode) &&
        Objects.equals(this.unitPrice, stockTradeRequest.unitPrice) &&
        Objects.equals(this.quantity, stockTradeRequest.quantity) &&
        Objects.equals(this.settlementAccountNo, stockTradeRequest.settlementAccountNo) &&
        Objects.equals(this.remark, stockTradeRequest.remark);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, stockCode, unitPrice, quantity, settlementAccountNo, remark);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StockTradeRequest {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    stockCode: ").append(toIndentedString(stockCode)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    settlementAccountNo: ").append(toIndentedString(settlementAccountNo)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

