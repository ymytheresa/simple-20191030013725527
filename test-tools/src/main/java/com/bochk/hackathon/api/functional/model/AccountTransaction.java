/*
 * BOCHK FinTech Hackathon 2018 API (Backend)
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.14 (20180124)
 * Contact: it_innovation_lab@bochk.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bochk.hackathon.api.functional.model;

import java.util.Objects;
import com.bochk.hackathon.api.functional.model.Currency;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * AccountTransaction
 */
public class AccountTransaction {
  @SerializedName("datetime")
  private OffsetDateTime datetime = null;

  /**
   * Gets or Sets txnType
   */
  @JsonAdapter(TxnTypeEnum.Adapter.class)
  public enum TxnTypeEnum {
    FOREX("FOREX"),
    
    TRANSFER("TRANSFER"),
    
    LOAN("LOAN"),
    
    STOCK("STOCK");

    private String value;

    TxnTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TxnTypeEnum fromValue(String text) {
      for (TxnTypeEnum b : TxnTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TxnTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TxnTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TxnTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TxnTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("txn_type")
  private TxnTypeEnum txnType = null;

  @SerializedName("account_no")
  private String accountNo = null;

  @SerializedName("account_no2")
  private String accountNo2 = null;

  @SerializedName("fps_phone_no")
  private String fpsPhoneNo = null;

  @SerializedName("fps_email")
  private String fpsEmail = null;

  @SerializedName("fps_id")
  private String fpsId = null;

  @SerializedName("currency")
  private Currency currency = null;

  @SerializedName("currency2")
  private Currency currency2 = null;

  @SerializedName("amount")
  private Double amount = null;

  @SerializedName("amount2")
  private Double amount2 = null;

  @SerializedName("after_balance")
  private Double afterBalance = null;

  @SerializedName("after_balance2")
  private Double afterBalance2 = null;

  @SerializedName("stock_code")
  private String stockCode = null;

  @SerializedName("remark")
  private String remark = null;

  public AccountTransaction datetime(OffsetDateTime datetime) {
    this.datetime = datetime;
    return this;
  }

   /**
   * Get datetime
   * @return datetime
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getDatetime() {
    return datetime;
  }

  public void setDatetime(OffsetDateTime datetime) {
    this.datetime = datetime;
  }

  public AccountTransaction txnType(TxnTypeEnum txnType) {
    this.txnType = txnType;
    return this;
  }

   /**
   * Get txnType
   * @return txnType
  **/
  @ApiModelProperty(required = true, value = "")
  public TxnTypeEnum getTxnType() {
    return txnType;
  }

  public void setTxnType(TxnTypeEnum txnType) {
    this.txnType = txnType;
  }

  public AccountTransaction accountNo(String accountNo) {
    this.accountNo = accountNo;
    return this;
  }

   /**
   * Get accountNo
   * @return accountNo
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAccountNo() {
    return accountNo;
  }

  public void setAccountNo(String accountNo) {
    this.accountNo = accountNo;
  }

  public AccountTransaction accountNo2(String accountNo2) {
    this.accountNo2 = accountNo2;
    return this;
  }

   /**
   * Get accountNo2
   * @return accountNo2
  **/
  @ApiModelProperty(value = "")
  public String getAccountNo2() {
    return accountNo2;
  }

  public void setAccountNo2(String accountNo2) {
    this.accountNo2 = accountNo2;
  }

  public AccountTransaction fpsPhoneNo(String fpsPhoneNo) {
    this.fpsPhoneNo = fpsPhoneNo;
    return this;
  }

   /**
   * Get fpsPhoneNo
   * @return fpsPhoneNo
  **/
  @ApiModelProperty(value = "")
  public String getFpsPhoneNo() {
    return fpsPhoneNo;
  }

  public void setFpsPhoneNo(String fpsPhoneNo) {
    this.fpsPhoneNo = fpsPhoneNo;
  }

  public AccountTransaction fpsEmail(String fpsEmail) {
    this.fpsEmail = fpsEmail;
    return this;
  }

   /**
   * Get fpsEmail
   * @return fpsEmail
  **/
  @ApiModelProperty(value = "")
  public String getFpsEmail() {
    return fpsEmail;
  }

  public void setFpsEmail(String fpsEmail) {
    this.fpsEmail = fpsEmail;
  }

  public AccountTransaction fpsId(String fpsId) {
    this.fpsId = fpsId;
    return this;
  }

   /**
   * Get fpsId
   * @return fpsId
  **/
  @ApiModelProperty(value = "")
  public String getFpsId() {
    return fpsId;
  }

  public void setFpsId(String fpsId) {
    this.fpsId = fpsId;
  }

  public AccountTransaction currency(Currency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(required = true, value = "")
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  public AccountTransaction currency2(Currency currency2) {
    this.currency2 = currency2;
    return this;
  }

   /**
   * Get currency2
   * @return currency2
  **/
  @ApiModelProperty(value = "")
  public Currency getCurrency2() {
    return currency2;
  }

  public void setCurrency2(Currency currency2) {
    this.currency2 = currency2;
  }

  public AccountTransaction amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public AccountTransaction amount2(Double amount2) {
    this.amount2 = amount2;
    return this;
  }

   /**
   * Get amount2
   * @return amount2
  **/
  @ApiModelProperty(value = "")
  public Double getAmount2() {
    return amount2;
  }

  public void setAmount2(Double amount2) {
    this.amount2 = amount2;
  }

  public AccountTransaction afterBalance(Double afterBalance) {
    this.afterBalance = afterBalance;
    return this;
  }

   /**
   * Get afterBalance
   * @return afterBalance
  **/
  @ApiModelProperty(required = true, value = "")
  public Double getAfterBalance() {
    return afterBalance;
  }

  public void setAfterBalance(Double afterBalance) {
    this.afterBalance = afterBalance;
  }

  public AccountTransaction afterBalance2(Double afterBalance2) {
    this.afterBalance2 = afterBalance2;
    return this;
  }

   /**
   * Get afterBalance2
   * @return afterBalance2
  **/
  @ApiModelProperty(value = "")
  public Double getAfterBalance2() {
    return afterBalance2;
  }

  public void setAfterBalance2(Double afterBalance2) {
    this.afterBalance2 = afterBalance2;
  }

  public AccountTransaction stockCode(String stockCode) {
    this.stockCode = stockCode;
    return this;
  }

   /**
   * Get stockCode
   * @return stockCode
  **/
  @ApiModelProperty(value = "")
  public String getStockCode() {
    return stockCode;
  }

  public void setStockCode(String stockCode) {
    this.stockCode = stockCode;
  }

  public AccountTransaction remark(String remark) {
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @ApiModelProperty(value = "")
  public String getRemark() {
    return remark;
  }

  public void setRemark(String remark) {
    this.remark = remark;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountTransaction accountTransaction = (AccountTransaction) o;
    return Objects.equals(this.datetime, accountTransaction.datetime) &&
        Objects.equals(this.txnType, accountTransaction.txnType) &&
        Objects.equals(this.accountNo, accountTransaction.accountNo) &&
        Objects.equals(this.accountNo2, accountTransaction.accountNo2) &&
        Objects.equals(this.fpsPhoneNo, accountTransaction.fpsPhoneNo) &&
        Objects.equals(this.fpsEmail, accountTransaction.fpsEmail) &&
        Objects.equals(this.fpsId, accountTransaction.fpsId) &&
        Objects.equals(this.currency, accountTransaction.currency) &&
        Objects.equals(this.currency2, accountTransaction.currency2) &&
        Objects.equals(this.amount, accountTransaction.amount) &&
        Objects.equals(this.amount2, accountTransaction.amount2) &&
        Objects.equals(this.afterBalance, accountTransaction.afterBalance) &&
        Objects.equals(this.afterBalance2, accountTransaction.afterBalance2) &&
        Objects.equals(this.stockCode, accountTransaction.stockCode) &&
        Objects.equals(this.remark, accountTransaction.remark);
  }

  @Override
  public int hashCode() {
    return Objects.hash(datetime, txnType, accountNo, accountNo2, fpsPhoneNo, fpsEmail, fpsId, currency, currency2, amount, amount2, afterBalance, afterBalance2, stockCode, remark);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountTransaction {\n");
    
    sb.append("    datetime: ").append(toIndentedString(datetime)).append("\n");
    sb.append("    txnType: ").append(toIndentedString(txnType)).append("\n");
    sb.append("    accountNo: ").append(toIndentedString(accountNo)).append("\n");
    sb.append("    accountNo2: ").append(toIndentedString(accountNo2)).append("\n");
    sb.append("    fpsPhoneNo: ").append(toIndentedString(fpsPhoneNo)).append("\n");
    sb.append("    fpsEmail: ").append(toIndentedString(fpsEmail)).append("\n");
    sb.append("    fpsId: ").append(toIndentedString(fpsId)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    currency2: ").append(toIndentedString(currency2)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    amount2: ").append(toIndentedString(amount2)).append("\n");
    sb.append("    afterBalance: ").append(toIndentedString(afterBalance)).append("\n");
    sb.append("    afterBalance2: ").append(toIndentedString(afterBalance2)).append("\n");
    sb.append("    stockCode: ").append(toIndentedString(stockCode)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

